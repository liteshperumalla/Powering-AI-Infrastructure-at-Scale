# Docker Compose configuration for production secrets management - Enhanced Security
# This file demonstrates how to use Docker secrets with Vault integration for secure credential handling

version: '3.8'

services:
  # HashiCorp Vault for centralized secrets management
  vault:
    image: vault:1.15
    container_name: infra_mind_vault_prod
    restart: always
    ports:
      - "127.0.0.1:8200:8200"  # Bind to localhost only
    environment:
      VAULT_ADDR: http://0.0.0.0:8200
      VAULT_API_ADDR: http://0.0.0.0:8200
      VAULT_CLUSTER_ADDR: http://0.0.0.0:8201
      VAULT_LOG_LEVEL: ${VAULT_LOG_LEVEL:-info}
      VAULT_DISABLE_MLOCK: ${VAULT_DISABLE_MLOCK:-false}
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/vault/data
      - vault_logs:/vault/logs
      - vault_config:/vault/config
      - ./scripts/vault-config.hcl:/vault/config/config.hcl:ro
      - ./scripts/vault-init.sh:/vault/scripts/init.sh:ro
    networks:
      - infra-mind-network
    command: |
      sh -c "
        vault server -config=/vault/config/config.hcl &
        sleep 10 &&
        /vault/scripts/init.sh &&
        wait
      "
    healthcheck:
      test: ["CMD", "vault", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true

  # Vault Agent for secret injection
  vault-agent:
    image: vault:1.15
    container_name: infra_mind_vault_agent
    restart: always
    environment:
      VAULT_ADDR: http://vault:8200
    volumes:
      - vault_secrets:/vault/secrets
      - ./scripts/vault-agent.hcl:/vault/config/agent.hcl:ro
    networks:
      - infra-mind-network
    depends_on:
      vault:
        condition: service_healthy
    command: vault agent -config=/vault/config/agent.hcl
    security_opt:
      - no-new-privileges:true

  # Main API service with enhanced secrets management
  api:
    image: infra-mind-api:${VERSION:-latest}
    secrets:
      - mongodb_url
      - redis_url
      - openai_api_key
      - anthropic_api_key
      - aws_access_key_id
      - aws_secret_access_key
      - azure_client_id
      - azure_client_secret
      - azure_tenant_id
      - gcp_service_account_json
      - jwt_secret_key
      - encryption_key
      - sentry_dsn
    environment:
      # Point to secret files instead of direct values
      - INFRA_MIND_MONGODB_URL_FILE=/run/secrets/mongodb_url
      - INFRA_MIND_REDIS_URL_FILE=/run/secrets/redis_url
      - INFRA_MIND_OPENAI_API_KEY_FILE=/run/secrets/openai_api_key
      - INFRA_MIND_ANTHROPIC_API_KEY_FILE=/run/secrets/anthropic_api_key
      - INFRA_MIND_AWS_ACCESS_KEY_ID_FILE=/run/secrets/aws_access_key_id
      - INFRA_MIND_AWS_SECRET_ACCESS_KEY_FILE=/run/secrets/aws_secret_access_key
      - INFRA_MIND_AZURE_CLIENT_ID_FILE=/run/secrets/azure_client_id
      - INFRA_MIND_AZURE_CLIENT_SECRET_FILE=/run/secrets/azure_client_secret
      - INFRA_MIND_AZURE_TENANT_ID_FILE=/run/secrets/azure_tenant_id
      - INFRA_MIND_GCP_SERVICE_ACCOUNT_JSON_FILE=/run/secrets/gcp_service_account_json
      - INFRA_MIND_JWT_SECRET_KEY_FILE=/run/secrets/jwt_secret_key
      - INFRA_MIND_ENCRYPTION_KEY_FILE=/run/secrets/encryption_key
      - INFRA_MIND_SENTRY_DSN_FILE=/run/secrets/sentry_dsn
      
      # Vault integration
      - VAULT_ADDR=http://vault:8200
      - VAULT_SECRETS_PATH=/vault/secrets
      
      # Non-secret environment variables
      - INFRA_MIND_ENVIRONMENT=production
      - INFRA_MIND_DEBUG=false
      - INFRA_MIND_API_HOST=0.0.0.0
      - INFRA_MIND_API_PORT=8000
      - INFRA_MIND_AWS_REGION=${AWS_REGION:-us-east-1}
      - INFRA_MIND_GCP_REGION=${GCP_REGION:-us-central1}
      - INFRA_MIND_LOG_LEVEL=${LOG_LEVEL:-info}
      - INFRA_MIND_METRICS_ENABLED=true
      - INFRA_MIND_TRACING_ENABLED=true
    volumes:
      - vault_secrets:/vault/secrets:ro
    depends_on:
      vault:
        condition: service_healthy
      vault-agent:
        condition: service_started
    deploy:
      replicas: 3
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
        order: start-first
      rollback_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - infra-mind-network
    security_opt:
      - no-new-privileges:true

  # Frontend service with secure configuration
  frontend:
    image: infra-mind-frontend:${VERSION:-latest}
    environment:
      - NEXT_PUBLIC_API_URL=${FRONTEND_API_URL}
      - NEXT_PUBLIC_WS_URL=${FRONTEND_WS_URL}
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - infra-mind-network
    security_opt:
      - no-new-privileges:true

  # Nginx reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    secrets:
      - ssl_certificate
      - ssl_private_key
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_cache:/var/cache/nginx
    environment:
      - SSL_CERTIFICATE_FILE=/run/secrets/ssl_certificate
      - SSL_PRIVATE_KEY_FILE=/run/secrets/ssl_private_key
    depends_on:
      - api
      - frontend
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    networks:
      - infra-mind-network
    security_opt:
      - no-new-privileges:true

  # Secrets rotation service
  secrets-rotator:
    image: alpine:latest
    container_name: infra_mind_secrets_rotator
    restart: "no"
    environment:
      VAULT_ADDR: http://vault:8200
    volumes:
      - ./scripts/rotate-secrets.sh:/rotate-secrets.sh:ro
    networks:
      - infra-mind-network
    depends_on:
      vault:
        condition: service_healthy
    command: |
      sh -c "
        apk add --no-cache curl jq &&
        chmod +x /rotate-secrets.sh &&
        /rotate-secrets.sh
      "
    profiles:
      - rotate-secrets

secrets:
  # Database secrets
  mongodb_url:
    external: true
    name: infra_mind_mongodb_url_v${SECRETS_VERSION:-1}
  redis_url:
    external: true
    name: infra_mind_redis_url_v${SECRETS_VERSION:-1}
    
  # LLM API keys
  openai_api_key:
    external: true
    name: infra_mind_openai_api_key_v${SECRETS_VERSION:-1}
  anthropic_api_key:
    external: true
    name: infra_mind_anthropic_api_key_v${SECRETS_VERSION:-1}
    
  # Cloud provider credentials
  aws_access_key_id:
    external: true
    name: infra_mind_aws_access_key_id_v${SECRETS_VERSION:-1}
  aws_secret_access_key:
    external: true
    name: infra_mind_aws_secret_access_key_v${SECRETS_VERSION:-1}
  azure_client_id:
    external: true
    name: infra_mind_azure_client_id_v${SECRETS_VERSION:-1}
  azure_client_secret:
    external: true
    name: infra_mind_azure_client_secret_v${SECRETS_VERSION:-1}
  azure_tenant_id:
    external: true
    name: infra_mind_azure_tenant_id_v${SECRETS_VERSION:-1}
  gcp_service_account_json:
    external: true
    name: infra_mind_gcp_service_account_json_v${SECRETS_VERSION:-1}
    
  # Application secrets
  jwt_secret_key:
    external: true
    name: infra_mind_jwt_secret_key_v${SECRETS_VERSION:-1}
  encryption_key:
    external: true
    name: infra_mind_encryption_key_v${SECRETS_VERSION:-1}
  sentry_dsn:
    external: true
    name: infra_mind_sentry_dsn_v${SECRETS_VERSION:-1}
    
  # SSL certificates
  ssl_certificate:
    external: true
    name: infra_mind_ssl_certificate_v${SECRETS_VERSION:-1}
  ssl_private_key:
    external: true
    name: infra_mind_ssl_private_key_v${SECRETS_VERSION:-1}

volumes:
  vault_data:
    driver: local
  vault_logs:
    driver: local
  vault_config:
    driver: local
  vault_secrets:
    driver: local
  nginx_cache:
    driver: local

networks:
  infra-mind-network:
    driver: overlay
    attachable: true
    encrypted: true
    ipam:
      config:
        - subnet: 172.30.0.0/16