apiVersion: apps/v1
kind: Deployment
metadata:
  name: infra-mind-api
  namespace: infra-mind
  labels:
    app: infra-mind-api
    component: backend
    version: v1.0.0
    tier: production
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubernetes.io/change-cause: "Production deployment with enhanced security"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: infra-mind-api
      version: v1.0.0
  template:
    metadata:
      labels:
        app: infra-mind-api
        component: backend
        version: v1.0.0
        tier: production
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        config.linkerd.io/proxy-cpu-request: "0.1"
        config.linkerd.io/proxy-memory-request: "20Mi"
    spec:
      serviceAccountName: infra-mind-api
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - infra-mind-api
              topologyKey: kubernetes.io/hostname
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-type
                operator: In
                values:
                - compute
      tolerations:
      - key: "compute-node"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      containers:
      - name: api
        image: infra-mind/api:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          runAsGroup: 1001
          capabilities:
            drop:
            - ALL
          seccompProfile:
            type: RuntimeDefault
        env:
        # Configuration from ConfigMap
        - name: INFRA_MIND_ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_ENVIRONMENT
        - name: INFRA_MIND_DEBUG
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_DEBUG
        - name: INFRA_MIND_API_HOST
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_API_HOST
        - name: INFRA_MIND_API_PORT
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_API_PORT
        - name: INFRA_MIND_MONGODB_URL
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_MONGODB_URL
        - name: INFRA_MIND_REDIS_URL
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_REDIS_URL
        - name: INFRA_MIND_LLM_MODEL
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_LLM_MODEL
        - name: INFRA_MIND_LLM_TEMPERATURE
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_LLM_TEMPERATURE
        - name: INFRA_MIND_AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_AWS_REGION
        - name: INFRA_MIND_CORS_ORIGINS
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_CORS_ORIGINS
        - name: INFRA_MIND_RATE_LIMIT_REQUESTS
          valueFrom:
            configMapKeyRef:
              name: infra-mind-config
              key: INFRA_MIND_RATE_LIMIT_REQUESTS
        
        # Secrets
        - name: INFRA_MIND_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: SECRET_KEY
        - name: INFRA_MIND_OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: OPENAI_API_KEY
        - name: INFRA_MIND_AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: AWS_ACCESS_KEY_ID
        - name: INFRA_MIND_AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: AWS_SECRET_ACCESS_KEY
        - name: INFRA_MIND_AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: AZURE_CLIENT_ID
        - name: INFRA_MIND_AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: AZURE_CLIENT_SECRET
        - name: INFRA_MIND_AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: AZURE_TENANT_ID
        - name: INFRA_MIND_GCP_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: GCP_PROJECT_ID
        
        # Database credentials
        - name: MONGO_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: MONGO_ROOT_USERNAME
        - name: MONGO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: MONGO_ROOT_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: REDIS_PASSWORD
        
        volumeMounts:
        - name: logs
          mountPath: /app/logs
          readOnly: false
        - name: tmp
          mountPath: /tmp
          readOnly: false
        - name: cache
          mountPath: /app/cache
          readOnly: false
        - name: gcp-service-account
          mountPath: /app/secrets/gcp
          readOnly: true
        - name: ssl-certs
          mountPath: /app/secrets/ssl
          readOnly: true
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "4Gi"
            cpu: "2000m"
            ephemeral-storage: "5Gi"
        
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTP
            httpHeaders:
            - name: User-Agent
              value: "k8s-liveness-probe"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
            scheme: HTTP
            httpHeaders:
            - name: User-Agent
              value: "k8s-readiness-probe"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        
        startupProbe:
          httpGet:
            path: /startup
            port: 8000
            scheme: HTTP
            httpHeaders:
            - name: User-Agent
              value: "k8s-startup-probe"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
      
      volumes:
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      - name: tmp
        emptyDir:
          sizeLimit: 500Mi
      - name: cache
        emptyDir:
          sizeLimit: 2Gi
      - name: gcp-service-account
        secret:
          secretName: gcp-service-account
          optional: true
          defaultMode: 0400
      - name: ssl-certs
        secret:
          secretName: infra-mind-ssl-certs
          optional: true
          defaultMode: 0400
      
      initContainers:
      - name: wait-for-mongodb
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z mongodb-service 27017; do echo waiting for mongodb; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z redis-service 6379; do echo waiting for redis; sleep 2; done;']

---
apiVersion: v1
kind: Service
metadata:
  name: infra-mind-api-service
  namespace: infra-mind
  labels:
    app: infra-mind-api
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
spec:
  selector:
    app: infra-mind-api
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: infra-mind-api
  namespace: infra-mind
  labels:
    app: infra-mind-api

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: infra-mind-api-pdb
  namespace: infra-mind
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: infra-mind-api