apiVersion: v1
kind: ServiceMonitor
metadata:
  name: redis-metrics
  namespace: infra-mind
  labels:
    app: redis
    component: monitoring
spec:
  selector:
    matchLabels:
      app: redis-exporter
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-exporter
  namespace: infra-mind
  labels:
    app: redis-exporter
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-exporter
  template:
    metadata:
      labels:
        app: redis-exporter
        component: monitoring
    spec:
      containers:
      - name: redis-exporter
        image: oliver006/redis_exporter:latest
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "redis://redis-cluster-service:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: infra-mind-secrets
              key: REDIS_PASSWORD
        - name: REDIS_EXPORTER_LOG_FORMAT
          value: "json"
        - name: REDIS_EXPORTER_DEBUG
          value: "false"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 9121
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter-service
  namespace: infra-mind
  labels:
    app: redis-exporter
spec:
  selector:
    app: redis-exporter
  ports:
  - port: 9121
    targetPort: 9121
    name: metrics
  type: ClusterIP

---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: redis-alerts
  namespace: infra-mind
  labels:
    app: redis
    component: monitoring
spec:
  groups:
  - name: redis.rules
    rules:
    - alert: RedisDown
      expr: redis_up == 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "Redis instance is down"
        description: "Redis instance {{ $labels.instance }} has been down for more than 5 minutes."
    
    - alert: RedisHighMemoryUsage
      expr: (redis_memory_used_bytes / redis_memory_max_bytes) * 100 > 90
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Redis memory usage is high"
        description: "Redis instance {{ $labels.instance }} memory usage is {{ $value }}%"
    
    - alert: RedisHighConnections
      expr: redis_connected_clients > 8000
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Redis has high number of connections"
        description: "Redis instance {{ $labels.instance }} has {{ $value }} connections"
    
    - alert: RedisSlowQueries
      expr: increase(redis_slowlog_length[5m]) > 10
      for: 2m
      labels:
        severity: warning
      annotations:
        summary: "Redis has slow queries"
        description: "Redis instance {{ $labels.instance }} has {{ $value }} slow queries in the last 5 minutes"
    
    - alert: RedisKeyspaceHitRateLow
      expr: (rate(redis_keyspace_hits_total[5m]) / (rate(redis_keyspace_hits_total[5m]) + rate(redis_keyspace_misses_total[5m]))) * 100 < 50
      for: 10m
      labels:
        severity: warning
      annotations:
        summary: "Redis keyspace hit rate is low"
        description: "Redis instance {{ $labels.instance }} keyspace hit rate is {{ $value }}%"
    
    - alert: RedisClusterNodeDown
      expr: redis_cluster_nodes{role="master",state!="ok"} > 0
      for: 2m
      labels:
        severity: critical
      annotations:
        summary: "Redis cluster node is down"
        description: "Redis cluster has {{ $value }} master nodes in non-ok state"
    
    - alert: RedisReplicationLag
      expr: redis_replication_lag_seconds > 30
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Redis replication lag is high"
        description: "Redis replica {{ $labels.instance }} is lagging {{ $value }} seconds behind master"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-dashboard
  namespace: infra-mind
  labels:
    grafana_dashboard: "1"
data:
  redis-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Redis Performance Dashboard",
        "tags": ["redis", "cache", "infra-mind"],
        "timezone": "browser",
        "panels": [
          {
            "title": "Redis Memory Usage",
            "type": "stat",
            "targets": [
              {
                "expr": "redis_memory_used_bytes",
                "legendFormat": "Memory Used"
              }
            ]
          },
          {
            "title": "Cache Hit Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "(rate(redis_keyspace_hits_total[5m]) / (rate(redis_keyspace_hits_total[5m]) + rate(redis_keyspace_misses_total[5m]))) * 100",
                "legendFormat": "Hit Rate %"
              }
            ]
          },
          {
            "title": "Connected Clients",
            "type": "graph",
            "targets": [
              {
                "expr": "redis_connected_clients",
                "legendFormat": "Connected Clients"
              }
            ]
          },
          {
            "title": "Commands per Second",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(redis_commands_processed_total[1m])",
                "legendFormat": "Commands/sec"
              }
            ]
          },
          {
            "title": "Keyspace Operations",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(redis_keyspace_hits_total[1m])",
                "legendFormat": "Hits/sec"
              },
              {
                "expr": "rate(redis_keyspace_misses_total[1m])",
                "legendFormat": "Misses/sec"
              }
            ]
          }
        ],
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "refresh": "30s"
      }
    }