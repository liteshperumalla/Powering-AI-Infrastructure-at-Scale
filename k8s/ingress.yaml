apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: infra-mind-ingress
  namespace: infra-mind
  labels:
    app: infra-mind
  annotations:
    # NGINX Ingress Controller annotations
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;
    
    # Certificate management (cert-manager)
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    cert-manager.io/acme-challenge-type: "http01"
    
    # AWS Load Balancer Controller (alternative to NGINX)
    # kubernetes.io/ingress.class: "alb"
    # alb.ingress.kubernetes.io/scheme: "internet-facing"
    # alb.ingress.kubernetes.io/target-type: "ip"
    # alb.ingress.kubernetes.io/ssl-redirect: "443"
    # alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:region:account:certificate/cert-id"
spec:
  tls:
  - hosts:
    - infra-mind.example.com
    - api.infra-mind.example.com
    secretName: infra-mind-tls
  rules:
  - host: infra-mind.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: infra-mind-frontend-service
            port:
              number: 3000
  - host: api.infra-mind.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: infra-mind-api-service
            port:
              number: 8000

---
# Staging ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: infra-mind-ingress-staging
  namespace: infra-mind-staging
  labels:
    app: infra-mind
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
    cert-manager.io/acme-challenge-type: "http01"
    
    # Basic auth for staging (optional)
    nginx.ingress.kubernetes.io/auth-type: "basic"
    nginx.ingress.kubernetes.io/auth-secret: "basic-auth"
    nginx.ingress.kubernetes.io/auth-realm: "Infra Mind Staging - Authentication Required"
spec:
  tls:
  - hosts:
    - staging.infra-mind.example.com
    - api-staging.infra-mind.example.com
    secretName: infra-mind-staging-tls
  rules:
  - host: staging.infra-mind.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: infra-mind-frontend-service
            port:
              number: 3000
  - host: api-staging.infra-mind.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: infra-mind-api-service
            port:
              number: 8000

---
# ClusterIssuer for Let's Encrypt (cert-manager)
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: admin@infra-mind.example.com
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx

---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    email: admin@infra-mind.example.com
    privateKeySecretRef:
      name: letsencrypt-staging
    solvers:
    - http01:
        ingress:
          class: nginx